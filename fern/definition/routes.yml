imports:
  graphql: ./graphql.yml
types:
  SecuritySchemeName: string
  SecuritySchemeType:
    enum:
      - basic
      - apiKey
      - http
      - oauth2
      - openIdConnect
      - mutualTLS
  SecurityScheme:
    properties:
      type: SecuritySchemeType
      description: optional<string>
      name: optional<SecuritySchemeName>
      in: optional<string>
      scheme: optional<string>
      bearerFormat: optional<string>
      flow: optional<string> # oauth v2
      authorizationUrl: optional<string> # oauth v2
      tokenUrl: optional<string> # oauth v2
      scopes: optional<map<string, string>>
      flows: optional<OAuthFlows> # oauth v3
      openIdConnectUrl: optional<string>
  OAuthFlows:
    properties:
      implicit: optional<OAuthFlow>
      password: optional<OAuthFlow>
      clientCredentials: optional<OAuthFlow>
      authorizationCode: optional<OAuthFlow>
  OAuthFlow:
    properties:
      authorizationUrl: optional<string>
      tokenUrl: optional<string>
      refreshUrl: optional<string>
      scopes: optional<map<string, string>>
  SecurityRequirement:
    properties:
      schemes: map<string, optional<list<string>>>
  Route:
    properties:
      path: string
      queryParams: optional<list<string>>
      security: optional<SecurityRequirement>
      method: string
      type: APIType
      description: string
  RoutesReport:
    properties:
      target: string
      appType: APIType
      baseEndpointUrl: string
      version: optional<string>
      schemaUrl: optional<string>
      routes: optional<list<Route>>
      securitySchemes: optional<map<SecuritySchemeName, SecurityScheme>>
      security: optional<list<SecurityRequirement>>
      queries: optional<list<graphql.GraphQLQuery>>
      raw: string
      errors: optional<list<string>>
  APIType:
    enum:
      - Grpc
      - GraphQL
      - SwaggerV2
      - SwaggerV3
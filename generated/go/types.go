// This file was auto-generated by Fern from our API Definition.

package webscan

import (
	json "encoding/json"
	fmt "fmt"

	core "github.com/Method-Security/webscan/generated/go/core"
)

type FuzzPathReport struct {
	Target                  string        `json:"target" url:"target"`
	Urls                    []*UrlDetails `json:"urls,omitempty" url:"urls,omitempty"`
	UrlsSkipedFromBaseMatch []*UrlDetails `json:"urlsSkipedFromBaseMatch,omitempty" url:"urlsSkipedFromBaseMatch,omitempty"`
	Errors                  []string      `json:"errors,omitempty" url:"errors,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (f *FuzzPathReport) GetExtraProperties() map[string]interface{} {
	return f.extraProperties
}

func (f *FuzzPathReport) UnmarshalJSON(data []byte) error {
	type unmarshaler FuzzPathReport
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*f = FuzzPathReport(value)

	extraProperties, err := core.ExtractExtraProperties(data, *f)
	if err != nil {
		return err
	}
	f.extraProperties = extraProperties

	f._rawJSON = json.RawMessage(data)
	return nil
}

func (f *FuzzPathReport) String() string {
	if len(f._rawJSON) > 0 {
		if value, err := core.StringifyJSON(f._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(f); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", f)
}

type UrlDetails struct {
	Url    string `json:"url" url:"url"`
	Status string `json:"status" url:"status"`
	Size   int    `json:"size" url:"size"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (u *UrlDetails) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UrlDetails) UnmarshalJSON(data []byte) error {
	type unmarshaler UrlDetails
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UrlDetails(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UrlDetails) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}
